vllm using port  34546
[W522 13:02:25.657640593 OperatorEntry.cpp:154] Warning: Warning only once for all operators,  other operators may also be overridden.
  Overriding a previously registered kernel for the same operator and the same dispatch key
  operator: aten::geometric_(Tensor(a!) self, float p, *, Generator? generator=None) -> Tensor(a!)
    registered at /pytorch/build/aten/src/ATen/RegisterSchema.cpp:6
  dispatch key: XPU
  previous kernel: registered at /pytorch/aten/src/ATen/VmapModeRegistrations.cpp:37
       new kernel: registered at /build/intel-pytorch-extension/build/Release/csrc/gpu/csrc/gpu/xpu/ATen/RegisterXPU_0.cpp:186 (function operator())
INFO 05-22 13:02:37 [__init__.py:248] Automatically detected platform xpu.
WARNING 05-22 13:02:38 [_logger.py:68] Failed to import from vllm._C with ModuleNotFoundError("No module named 'vllm._C'")
INFO 05-22 13:02:55 [config.py:752] This model supports multiple tasks: {'classify', 'generate', 'embed', 'score', 'reward'}. Defaulting to 'generate'.
WARNING 05-22 13:02:55 [_logger.py:68] device type=xpu is not supported by the V1 Engine. Falling back to V0. 
INFO 05-22 13:02:55 [config.py:1815] Defaulting to use mp for distributed inference
INFO 05-22 13:02:55 [config.py:1849] Disabled the custom all-reduce kernel because it is not supported on current platform.
ERROR 05-22 13:02:55 [xpu.py:104] Both start methods (spawn and fork) have issue on XPU if you use mp backend, setting it to ray instead.
INFO 05-22 13:02:55 [llm_engine.py:240] Initializing a V0 LLM engine (v0.8.5.dev562+gc44c384b1) with config: model='/scratch/group/hprc/llama-models/llama-3_3-70B', speculative_config=None, tokenizer='/scratch/group/hprc/llama-models/llama-3_3-70B', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=1024, download_dir=None, load_format=auto, tensor_parallel_size=4, pipeline_parallel_size=1, disable_custom_all_reduce=True, quantization=None, enforce_eager=True, kv_cache_dtype=auto,  device_config=xpu, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=None, served_model_name=/scratch/group/hprc/llama-models/llama-3_3-70B, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=None, chunked_prefill_enabled=False, use_async_output_proc=True, pooler_config=None, compilation_config={"splitting_ops":[],"compile_sizes":[],"cudagraph_capture_sizes":[],"max_capture_size":0}, use_cached_outputs=False, 
WARNING 05-22 13:02:56 [_logger.py:68] No existing RAY instance detected. A new instance will be launched with current node resources.
2025-05-22 13:02:59,684	INFO worker.py:1888 -- Started a local Ray instance.
INFO 05-22 13:03:03 [ray_utils.py:335] No current placement group found. Creating a new placement group.
INFO 05-22 13:03:08 [ray_distributed_executor.py:176] use_ray_spmd_worker: False
[36m(pid=1670809)[0m [W522 13:03:13.436699022 OperatorEntry.cpp:154] Warning: Warning only once for all operators,  other operators may also be overridden.
[36m(pid=1670809)[0m   Overriding a previously registered kernel for the same operator and the same dispatch key
[36m(pid=1670809)[0m   operator: aten::geometric_(Tensor(a!) self, float p, *, Generator? generator=None) -> Tensor(a!)
[36m(pid=1670809)[0m     registered at /pytorch/build/aten/src/ATen/RegisterSchema.cpp:6
[36m(pid=1670809)[0m   dispatch key: XPU
[36m(pid=1670809)[0m   previous kernel: registered at /pytorch/aten/src/ATen/VmapModeRegistrations.cpp:37
[36m(pid=1670809)[0m        new kernel: registered at /build/intel-pytorch-extension/build/Release/csrc/gpu/csrc/gpu/xpu/ATen/RegisterXPU_0.cpp:186 (function operator())
[36m(pid=1670812)[0m INFO 05-22 13:03:14 [__init__.py:248] Automatically detected platform xpu.
[36m(pid=1670812)[0m WARNING 05-22 13:03:15 [_logger.py:68] Failed to import from vllm._C with ModuleNotFoundError("No module named 'vllm._C'")
INFO 05-22 13:03:16 [ray_distributed_executor.py:352] non_carry_over_env_vars from config: set()
INFO 05-22 13:03:16 [ray_distributed_executor.py:354] Copying the following environment variables to workers: ['VLLM_PORT', 'LD_LIBRARY_PATH', 'VLLM_USE_V1']
INFO 05-22 13:03:16 [ray_distributed_executor.py:357] If certain env vars should NOT be copied to workers, add them to /home/u.ks124812/.config/vllm/ray_non_carry_over_env_vars.json file
INFO 05-22 13:03:16 [xpu.py:35] Cannot use None backend on XPU.
INFO 05-22 13:03:16 [xpu.py:36] Using IPEX attention backend.
[36m(RayWorkerWrapper pid=1670810)[0m INFO 05-22 13:03:16 [xpu.py:35] Cannot use None backend on XPU.
[36m(RayWorkerWrapper pid=1670810)[0m INFO 05-22 13:03:16 [xpu.py:36] Using IPEX attention backend.
INFO 05-22 13:03:18 [shm_broadcast.py:266] vLLM message queue communication handle: Handle(local_reader_ranks=[1, 2, 3], buffer_handle=(3, 4194304, 6, 'psm_743113eb'), local_subscribe_addr='ipc:///tmp/job.1138022/b988fc5a-9728-4e7c-993e-1eac839b6e65', remote_subscribe_addr=None, remote_addr_ipv6=False)
INFO 05-22 13:03:18 [parallel_state.py:1004] rank 0 in world size 4 is assigned as DP rank 0, PP rank 0, TP rank 0
2025:05:22-13:03:18:(1669939) |CCL_WARN| value of CCL_ATL_TRANSPORT changed to be ofi (default:mpi)
2025:05:22-13:03:18:(1669939) |CCL_WARN| value of CCL_LOCAL_RANK changed to be 0 (default:-1)
2025:05:22-13:03:18:(1669939) |CCL_WARN| value of CCL_LOCAL_SIZE changed to be 4 (default:-1)
2025:05:22-13:03:18:(1669939) |CCL_WARN| value of CCL_PROCESS_LAUNCHER changed to be none (default:hydra)
2025:05:22-13:03:19:(1669939) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:22-13:03:19:(1669939) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:22-13:03:19:(1669939) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:22-13:03:19:(1669939) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:22-13:03:19:(1669939) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:22-13:03:19:(1669939) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:22-13:03:19:(1669939) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:22-13:03:19:(1669939) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:22-13:03:19:(1669939) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:22-13:03:19:(1669939) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:22-13:03:19:(1669939) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:22-13:03:19:(1669939) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:22-13:03:19:(1669939) |CCL_WARN| pidfd is not supported, fallbacks to drmfd exchange mode
[36m(RayWorkerWrapper pid=1670810)[0m INFO 05-22 13:03:18 [parallel_state.py:1004] rank 1 in world size 4 is assigned as DP rank 0, PP rank 0, TP rank 1
[36m(RayWorkerWrapper pid=1670810)[0m 2025:05:22-13:03:19:(1670810) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=1670810)[0m 2025:05:22-13:03:19:(1670810) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=1670810)[0m 2025:05:22-13:03:19:(1670810) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=1670810)[0m 2025:05:22-13:03:19:(1670810) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=1670810)[0m 2025:05:22-13:03:19:(1670810) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=1670810)[0m 2025:05:22-13:03:19:(1670810) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=1670810)[0m 2025:05:22-13:03:19:(1670810) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=1670810)[0m 2025:05:22-13:03:19:(1670810) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=1670810)[0m 2025:05:22-13:03:19:(1670810) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=1670810)[0m 2025:05:22-13:03:19:(1670810) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=1670810)[0m 2025:05:22-13:03:19:(1670810) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=1670810)[0m 2025:05:22-13:03:19:(1670810) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=1670810)[0m 2025:05:22-13:03:19:(1670810) |CCL_WARN| pidfd is not supported, fallbacks to drmfd exchange mode
[36m(pid=1670811)[0m INFO 05-22 13:03:14 [__init__.py:248] Automatically detected platform xpu.[32m [repeated 3x across cluster] (Ray deduplicates logs by default. Set RAY_DEDUP_LOGS=0 to disable log deduplication, or see https://docs.ray.io/en/master/ray-observability/user-guides/configure-logging.html#log-deduplication for more options.)[0m
Loading safetensors checkpoint shards:   0% Completed | 0/30 [00:00<?, ?it/s]
Loading safetensors checkpoint shards:   3% Completed | 1/30 [00:05<02:35,  5.36s/it]
Loading safetensors checkpoint shards:   7% Completed | 2/30 [00:10<02:24,  5.15s/it]
Loading safetensors checkpoint shards:  10% Completed | 3/30 [00:14<02:06,  4.68s/it]
Loading safetensors checkpoint shards:  13% Completed | 4/30 [00:17<01:49,  4.19s/it]
Loading safetensors checkpoint shards:  17% Completed | 5/30 [00:20<01:27,  3.49s/it]
Loading safetensors checkpoint shards:  20% Completed | 6/30 [00:22<01:14,  3.11s/it]
Loading safetensors checkpoint shards:  23% Completed | 7/30 [00:25<01:09,  3.01s/it]
Loading safetensors checkpoint shards:  27% Completed | 8/30 [00:27<01:03,  2.87s/it]
Loading safetensors checkpoint shards:  30% Completed | 9/30 [00:30<00:58,  2.81s/it]
Loading safetensors checkpoint shards:  33% Completed | 10/30 [00:33<00:57,  2.89s/it]
Loading safetensors checkpoint shards:  37% Completed | 11/30 [00:38<01:07,  3.53s/it]
Loading safetensors checkpoint shards:  40% Completed | 12/30 [00:41<00:57,  3.21s/it]
Loading safetensors checkpoint shards:  43% Completed | 13/30 [00:43<00:50,  3.00s/it]
Loading safetensors checkpoint shards:  47% Completed | 14/30 [00:48<00:59,  3.71s/it]
Loading safetensors checkpoint shards:  50% Completed | 15/30 [00:52<00:54,  3.66s/it]
Loading safetensors checkpoint shards:  53% Completed | 16/30 [00:55<00:47,  3.41s/it]
Loading safetensors checkpoint shards:  57% Completed | 17/30 [00:58<00:41,  3.19s/it]
Loading safetensors checkpoint shards:  60% Completed | 18/30 [01:00<00:35,  2.95s/it]
Loading safetensors checkpoint shards:  63% Completed | 19/30 [01:02<00:30,  2.78s/it]
Loading safetensors checkpoint shards:  67% Completed | 20/30 [01:05<00:28,  2.89s/it]
Loading safetensors checkpoint shards:  70% Completed | 21/30 [01:08<00:25,  2.82s/it]
Loading safetensors checkpoint shards:  73% Completed | 22/30 [01:11<00:22,  2.79s/it]
Loading safetensors checkpoint shards:  77% Completed | 23/30 [01:15<00:22,  3.17s/it]
Loading safetensors checkpoint shards:  80% Completed | 24/30 [01:18<00:19,  3.27s/it]
Loading safetensors checkpoint shards:  83% Completed | 25/30 [01:21<00:15,  3.17s/it]
Loading safetensors checkpoint shards:  87% Completed | 26/30 [01:25<00:13,  3.25s/it]
Loading safetensors checkpoint shards:  90% Completed | 27/30 [01:28<00:09,  3.24s/it]
Loading safetensors checkpoint shards:  93% Completed | 28/30 [01:30<00:05,  2.96s/it]
Loading safetensors checkpoint shards:  97% Completed | 29/30 [01:33<00:02,  2.94s/it]
Loading safetensors checkpoint shards: 100% Completed | 30/30 [01:39<00:00,  3.79s/it]
Loading safetensors checkpoint shards: 100% Completed | 30/30 [01:39<00:00,  3.31s/it]

INFO 05-22 13:05:03 [default_loader.py:278] Loading weights took 99.51 seconds
WARNING 05-22 13:05:03 [_logger.py:68] Pin memory is not supported on XPU.
INFO 05-22 13:05:04 [xpu_model_runner.py:414] Loading model weights took 32.8894 GiB
2025:05:22-13:05:14:(1669939) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:22-13:05:14:(1669939) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:22-13:05:14:(1669939) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:22-13:05:14:(1669939) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:22-13:05:14:(1669939) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:22-13:05:14:(1669939) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:22-13:05:14:(1669939) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:22-13:05:14:(1669939) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:22-13:05:14:(1669939) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:22-13:05:14:(1669939) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:22-13:05:14:(1669939) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:22-13:05:14:(1669939) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:22-13:05:14:(1669939) |CCL_WARN| pidfd is not supported, fallbacks to drmfd exchange mode
[36m(RayWorkerWrapper pid=1670812)[0m INFO 05-22 13:05:12 [default_loader.py:278] Loading weights took 107.72 seconds
[36m(RayWorkerWrapper pid=1670812)[0m WARNING 05-22 13:05:12 [_logger.py:68] Pin memory is not supported on XPU.
[36m(pid=1670811)[0m WARNING 05-22 13:03:15 [_logger.py:68] Failed to import from vllm._C with ModuleNotFoundError("No module named 'vllm._C'")[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=1670812)[0m INFO 05-22 13:03:16 [xpu.py:35] Cannot use None backend on XPU.[32m [repeated 2x across cluster][0m
[36m(RayWorkerWrapper pid=1670812)[0m INFO 05-22 13:03:16 [xpu.py:36] Using IPEX attention backend.[32m [repeated 2x across cluster][0m
[36m(RayWorkerWrapper pid=1670812)[0m INFO 05-22 13:03:18 [parallel_state.py:1004] rank 3 in world size 4 is assigned as DP rank 0, PP rank 0, TP rank 3[32m [repeated 2x across cluster][0m
[36m(RayWorkerWrapper pid=1670812)[0m 2025:05:22-13:03:19:(1670812) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices[32m [repeated 24x across cluster][0m
[36m(RayWorkerWrapper pid=1670812)[0m 2025:05:22-13:03:19:(1670812) |CCL_WARN| pidfd is not supported, fallbacks to drmfd exchange mode[32m [repeated 2x across cluster][0m
[36m(RayWorkerWrapper pid=1670812)[0m INFO 05-22 13:05:12 [xpu_model_runner.py:414] Loading model weights took 32.8894 GiB
INFO 05-22 13:05:20 [executor_base.py:112] # xpu blocks: 8446, # CPU blocks: 3276
INFO 05-22 13:05:20 [executor_base.py:117] Maximum concurrency for 1024 tokens per request: 131.97x
INFO 05-22 13:05:20 [llm_engine.py:435] init engine (profile, create kv cache, warmup model) took 8.23 seconds
 * Serving Flask app 'app'
 * Debug mode: off
2025-05-22 13:05:20,906 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:1025
 * Running on http://127.0.0.1:1025
2025-05-22 13:05:20,906 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
