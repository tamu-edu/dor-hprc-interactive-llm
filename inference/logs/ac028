vllm using port  58861
[W512 10:53:21.001638019 OperatorEntry.cpp:154] Warning: Warning only once for all operators,  other operators may also be overridden.
  Overriding a previously registered kernel for the same operator and the same dispatch key
  operator: aten::geometric_(Tensor(a!) self, float p, *, Generator? generator=None) -> Tensor(a!)
    registered at /pytorch/build/aten/src/ATen/RegisterSchema.cpp:6
  dispatch key: XPU
  previous kernel: registered at /pytorch/aten/src/ATen/VmapModeRegistrations.cpp:37
       new kernel: registered at /build/intel-pytorch-extension/build/Release/csrc/gpu/csrc/gpu/xpu/ATen/RegisterXPU_0.cpp:186 (function operator())
INFO 05-12 10:53:32 [__init__.py:248] Automatically detected platform xpu.
WARNING 05-12 10:53:33 [_logger.py:68] Failed to import from vllm._C with ModuleNotFoundError("No module named 'vllm._C'")
INFO 05-12 10:53:49 [config.py:752] This model supports multiple tasks: {'score', 'classify', 'reward', 'generate', 'embed'}. Defaulting to 'generate'.
WARNING 05-12 10:53:49 [_logger.py:68] device type=xpu is not supported by the V1 Engine. Falling back to V0. 
INFO 05-12 10:53:49 [config.py:1815] Defaulting to use mp for distributed inference
INFO 05-12 10:53:49 [config.py:1849] Disabled the custom all-reduce kernel because it is not supported on current platform.
ERROR 05-12 10:53:49 [xpu.py:104] Both start methods (spawn and fork) have issue on XPU if you use mp backend, setting it to ray instead.
INFO 05-12 10:53:49 [llm_engine.py:240] Initializing a V0 LLM engine (v0.8.5.dev562+gc44c384b1) with config: model='/scratch/group/hprc/llama-models/llama-3_3-70B', speculative_config=None, tokenizer='/scratch/group/hprc/llama-models/llama-3_3-70B', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=1024, download_dir=None, load_format=auto, tensor_parallel_size=8, pipeline_parallel_size=1, disable_custom_all_reduce=True, quantization=None, enforce_eager=True, kv_cache_dtype=auto,  device_config=xpu, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=None, served_model_name=/scratch/group/hprc/llama-models/llama-3_3-70B, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=None, chunked_prefill_enabled=False, use_async_output_proc=True, pooler_config=None, compilation_config={"splitting_ops":[],"compile_sizes":[],"cudagraph_capture_sizes":[],"max_capture_size":0}, use_cached_outputs=False, 
WARNING 05-12 10:53:50 [_logger.py:68] No existing RAY instance detected. A new instance will be launched with current node resources.
2025-05-12 10:53:54,502	INFO worker.py:1888 -- Started a local Ray instance.
INFO 05-12 10:53:58 [ray_utils.py:335] No current placement group found. Creating a new placement group.
INFO 05-12 10:54:04 [ray_distributed_executor.py:176] use_ray_spmd_worker: False
[36m(pid=2804921)[0m [W512 10:54:09.066557291 OperatorEntry.cpp:154] Warning: Warning only once for all operators,  other operators may also be overridden.
[36m(pid=2804921)[0m   Overriding a previously registered kernel for the same operator and the same dispatch key
[36m(pid=2804921)[0m   operator: aten::geometric_(Tensor(a!) self, float p, *, Generator? generator=None) -> Tensor(a!)
[36m(pid=2804921)[0m     registered at /pytorch/build/aten/src/ATen/RegisterSchema.cpp:6
[36m(pid=2804921)[0m   dispatch key: XPU
[36m(pid=2804921)[0m   previous kernel: registered at /pytorch/aten/src/ATen/VmapModeRegistrations.cpp:37
[36m(pid=2804921)[0m        new kernel: registered at /build/intel-pytorch-extension/build/Release/csrc/gpu/csrc/gpu/xpu/ATen/RegisterXPU_0.cpp:186 (function operator())
[36m(pid=2804921)[0m INFO 05-12 10:54:10 [__init__.py:248] Automatically detected platform xpu.
[36m(pid=2804921)[0m WARNING 05-12 10:54:11 [_logger.py:68] Failed to import from vllm._C with ModuleNotFoundError("No module named 'vllm._C'")
INFO 05-12 10:54:13 [ray_distributed_executor.py:352] non_carry_over_env_vars from config: set()
INFO 05-12 10:54:13 [ray_distributed_executor.py:354] Copying the following environment variables to workers: ['VLLM_PORT', 'LD_LIBRARY_PATH', 'VLLM_USE_V1']
INFO 05-12 10:54:13 [ray_distributed_executor.py:357] If certain env vars should NOT be copied to workers, add them to /home/u.ks124812/.config/vllm/ray_non_carry_over_env_vars.json file
INFO 05-12 10:54:13 [xpu.py:35] Cannot use None backend on XPU.
INFO 05-12 10:54:13 [xpu.py:36] Using IPEX attention backend.
[36m(RayWorkerWrapper pid=2804922)[0m INFO 05-12 10:54:13 [xpu.py:35] Cannot use None backend on XPU.
[36m(RayWorkerWrapper pid=2804922)[0m INFO 05-12 10:54:13 [xpu.py:36] Using IPEX attention backend.
INFO 05-12 10:54:13 [shm_broadcast.py:266] vLLM message queue communication handle: Handle(local_reader_ranks=[1, 2, 3, 4, 5, 6, 7], buffer_handle=(7, 4194304, 6, 'psm_c433940a'), local_subscribe_addr='ipc:///tmp/job.1108313/c834c9c5-4e3d-4de0-bdbc-2b861954d458', remote_subscribe_addr=None, remote_addr_ipv6=False)
INFO 05-12 10:54:13 [parallel_state.py:1004] rank 0 in world size 8 is assigned as DP rank 0, PP rank 0, TP rank 0
2025:05:12-10:54:13:(2802252) |CCL_WARN| value of CCL_ATL_TRANSPORT changed to be ofi (default:mpi)
2025:05:12-10:54:13:(2802252) |CCL_WARN| value of CCL_LOCAL_RANK changed to be 0 (default:-1)
2025:05:12-10:54:13:(2802252) |CCL_WARN| value of CCL_LOCAL_SIZE changed to be 8 (default:-1)
2025:05:12-10:54:13:(2802252) |CCL_WARN| value of CCL_PROCESS_LAUNCHER changed to be none (default:hydra)
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:54:16:(2802252) |CCL_WARN| pidfd is not supported, fallbacks to drmfd exchange mode
[36m(RayWorkerWrapper pid=2804922)[0m INFO 05-12 10:54:13 [parallel_state.py:1004] rank 1 in world size 8 is assigned as DP rank 0, PP rank 0, TP rank 1
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:54:16:(2804922) |CCL_WARN| pidfd is not supported, fallbacks to drmfd exchange mode
[36m(pid=2804926)[0m INFO 05-12 10:54:11 [__init__.py:248] Automatically detected platform xpu.[32m [repeated 7x across cluster] (Ray deduplicates logs by default. Set RAY_DEDUP_LOGS=0 to disable log deduplication, or see https://docs.ray.io/en/master/ray-observability/user-guides/configure-logging.html#log-deduplication for more options.)[0m
Loading safetensors checkpoint shards:   0% Completed | 0/30 [00:00<?, ?it/s]
Loading safetensors checkpoint shards:   3% Completed | 1/30 [00:05<02:46,  5.75s/it]
Loading safetensors checkpoint shards:   7% Completed | 2/30 [00:09<02:07,  4.54s/it]
Loading safetensors checkpoint shards:  10% Completed | 3/30 [00:11<01:32,  3.44s/it]
Loading safetensors checkpoint shards:  13% Completed | 4/30 [00:14<01:20,  3.11s/it]
Loading safetensors checkpoint shards:  17% Completed | 5/30 [00:16<01:07,  2.69s/it]
Loading safetensors checkpoint shards:  20% Completed | 6/30 [00:18<00:58,  2.46s/it]
Loading safetensors checkpoint shards:  23% Completed | 7/30 [00:19<00:50,  2.19s/it]
Loading safetensors checkpoint shards:  27% Completed | 8/30 [00:21<00:45,  2.08s/it]
Loading safetensors checkpoint shards:  30% Completed | 9/30 [00:23<00:40,  1.93s/it]
Loading safetensors checkpoint shards:  33% Completed | 10/30 [00:24<00:37,  1.87s/it]
Loading safetensors checkpoint shards:  37% Completed | 11/30 [00:29<00:48,  2.56s/it]
Loading safetensors checkpoint shards:  40% Completed | 12/30 [00:31<00:44,  2.45s/it]
Loading safetensors checkpoint shards:  43% Completed | 13/30 [00:33<00:42,  2.51s/it]
Loading safetensors checkpoint shards:  47% Completed | 14/30 [00:35<00:35,  2.23s/it]
Loading safetensors checkpoint shards:  50% Completed | 15/30 [00:37<00:31,  2.11s/it]
Loading safetensors checkpoint shards:  53% Completed | 16/30 [00:39<00:30,  2.19s/it]
Loading safetensors checkpoint shards:  57% Completed | 17/30 [00:41<00:26,  2.03s/it]
Loading safetensors checkpoint shards:  60% Completed | 18/30 [00:43<00:24,  2.05s/it]
Loading safetensors checkpoint shards:  63% Completed | 19/30 [00:45<00:22,  2.08s/it]
Loading safetensors checkpoint shards:  67% Completed | 20/30 [00:47<00:20,  2.05s/it]
Loading safetensors checkpoint shards:  70% Completed | 21/30 [00:49<00:19,  2.13s/it]
Loading safetensors checkpoint shards:  73% Completed | 22/30 [00:52<00:17,  2.13s/it]
Loading safetensors checkpoint shards:  77% Completed | 23/30 [00:54<00:15,  2.20s/it]
Loading safetensors checkpoint shards:  80% Completed | 24/30 [00:56<00:12,  2.16s/it]
Loading safetensors checkpoint shards:  83% Completed | 25/30 [00:57<00:09,  1.84s/it]
Loading safetensors checkpoint shards:  87% Completed | 26/30 [00:59<00:07,  1.86s/it]
Loading safetensors checkpoint shards:  90% Completed | 27/30 [01:01<00:05,  1.89s/it]
Loading safetensors checkpoint shards:  93% Completed | 28/30 [01:04<00:04,  2.28s/it]
Loading safetensors checkpoint shards:  97% Completed | 29/30 [01:06<00:02,  2.26s/it]
Loading safetensors checkpoint shards: 100% Completed | 30/30 [01:08<00:00,  2.18s/it]
Loading safetensors checkpoint shards: 100% Completed | 30/30 [01:08<00:00,  2.29s/it]

INFO 05-12 10:55:27 [default_loader.py:278] Loading weights took 68.84 seconds
WARNING 05-12 10:55:27 [_logger.py:68] Pin memory is not supported on XPU.
INFO 05-12 10:55:28 [xpu_model_runner.py:414] Loading model weights took 16.4607 GiB
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:05:12-10:56:19:(2802252) |CCL_WARN| pidfd is not supported, fallbacks to drmfd exchange mode
[36m(RayWorkerWrapper pid=2804922)[0m INFO 05-12 10:55:51 [default_loader.py:278] Loading weights took 91.90 seconds
[36m(RayWorkerWrapper pid=2804922)[0m WARNING 05-12 10:55:51 [_logger.py:68] Pin memory is not supported on XPU.
[36m(pid=2804926)[0m WARNING 05-12 10:54:12 [_logger.py:68] Failed to import from vllm._C with ModuleNotFoundError("No module named 'vllm._C'")[32m [repeated 7x across cluster][0m
[36m(RayWorkerWrapper pid=2804929)[0m INFO 05-12 10:54:13 [xpu.py:35] Cannot use None backend on XPU.[32m [repeated 6x across cluster][0m
[36m(RayWorkerWrapper pid=2804929)[0m INFO 05-12 10:54:13 [xpu.py:36] Using IPEX attention backend.[32m [repeated 6x across cluster][0m
[36m(RayWorkerWrapper pid=2804929)[0m INFO 05-12 10:54:13 [parallel_state.py:1004] rank 7 in world size 8 is assigned as DP rank 0, PP rank 0, TP rank 7[32m [repeated 6x across cluster][0m
[36m(RayWorkerWrapper pid=2804929)[0m 2025:05:12-10:54:16:(2804929) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices[32m [repeated 336x across cluster][0m
[36m(RayWorkerWrapper pid=2804929)[0m 2025:05:12-10:54:16:(2804929) |CCL_WARN| pidfd is not supported, fallbacks to drmfd exchange mode[32m [repeated 6x across cluster][0m
[36m(RayWorkerWrapper pid=2804922)[0m INFO 05-12 10:55:51 [xpu_model_runner.py:414] Loading model weights took 16.4607 GiB
[36m(RayWorkerWrapper pid=2804927)[0m INFO 05-12 10:56:17 [default_loader.py:278] Loading weights took 117.96 seconds
[36m(RayWorkerWrapper pid=2804927)[0m WARNING 05-12 10:56:17 [_logger.py:68] Pin memory is not supported on XPU.
[36m(RayWorkerWrapper pid=2804929)[0m INFO 05-12 10:56:17 [default_loader.py:278] Loading weights took 117.91 seconds
[36m(RayWorkerWrapper pid=2804929)[0m WARNING 05-12 10:56:17 [_logger.py:68] Pin memory is not supported on XPU.
[36m(RayWorkerWrapper pid=2804929)[0m INFO 05-12 10:56:17 [xpu_model_runner.py:414] Loading model weights took 16.4607 GiB
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
[36m(RayWorkerWrapper pid=2804922)[0m 2025:05:12-10:56:19:(2804922) |CCL_WARN| pidfd is not supported, fallbacks to drmfd exchange mode
INFO 05-12 10:56:25 [executor_base.py:112] # xpu blocks: 43809, # CPU blocks: 6553
INFO 05-12 10:56:25 [executor_base.py:117] Maximum concurrency for 1024 tokens per request: 684.52x
INFO 05-12 10:56:25 [llm_engine.py:435] init engine (profile, create kv cache, warmup model) took 8.26 seconds
 * Serving Flask app 'app'
 * Debug mode: off
2025-05-12 10:56:26,441 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:1025
 * Running on http://127.0.0.1:1025
2025-05-12 10:56:26,441 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
my input:   is not defined NameError: name hello is not defined
max length:  256
Adding requests:   0%|          | 0/1 [00:00<?, ?it/s]Adding requests: 100%|██████████| 1/1 [00:00<00:00, 169.69it/s]
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]2025-05-12 10:57:44,255 - werkzeug - INFO - 10.71.8.1 - - [12/May/2025 10:57:44] "POST /infer HTTP/1.1" 200 -
Processed prompts: 100%|██████████| 1/1 [00:33<00:00, 33.57s/it, est. speed input: 0.36 toks/s, output: 7.63 toks/s]Processed prompts: 100%|██████████| 1/1 [00:33<00:00, 33.57s/it, est. speed input: 0.36 toks/s, output: 7.63 toks/s]
[RequestOutput(request_id=0, prompt=' is not defined NameError: name hello is not defined', prompt_token_ids=[128000, 374, 539, 4613, 4076, 1480, 25, 836, 24748, 374, 539, 4613], encoder_prompt=None, encoder_prompt_token_ids=None, prompt_logprobs=None, outputs=[CompletionOutput(index=0, text='\nNameError: name \'hello\' is not defined\n```\nhello()\n```\n### Step-by-step analysis of the problem:\n1. **The error message indicates that the name \'hello\' is not defined**. This means that Python does not recognize \'hello\' as a function, variable, or any other defined entity.\n2. **The code is trying to call a function named \'hello\'**. However, there is no function or variable defined with this name in the given snippet.\n3. **To fix this error, we need to define the \'hello\' function** before calling it. This involves creating a function named \'hello\' that performs the desired action.\n\n### Fixed solution:\n```python\n# Define the hello function\ndef hello():\n    # Print a greeting message\n    print("Hello, World!")\n\n# Call the hello function\nhello()\n```\n\n### Explanation of changes:\n* **Added a function definition for \'hello\'**: We defined a function named \'hello\' using the `def` keyword.\n* **Provided a function body for \'hello\'**: Inside the function, we added a print statement to display a greeting message.\n* **Called the \'hello\' function after its definition**: We moved the function call to after the', token_ids=(198, 678, 1480, 25, 836, 364, 15339, 6, 374, 539, 4613, 198, 14196, 4077, 15339, 746, 14196, 4077, 14711, 15166, 14656, 30308, 6492, 315, 279, 3575, 512, 16, 13, 3146, 791, 1493, 1984, 15151, 430, 279, 836, 364, 15339, 6, 374, 539, 4613, 334, 13, 1115, 3445, 430, 13325, 1587, 539, 15641, 364, 15339, 6, 439, 264, 734, 11, 3977, 11, 477, 904, 1023, 4613, 5502, 627, 17, 13, 3146, 791, 2082, 374, 4560, 311, 1650, 264, 734, 7086, 364, 15339, 6, 334, 13, 4452, 11, 1070, 374, 912, 734, 477, 3977, 4613, 449, 420, 836, 304, 279, 2728, 44165, 627, 18, 13, 3146, 1271, 5155, 420, 1493, 11, 584, 1205, 311, 7124, 279, 364, 15339, 6, 734, 334, 1603, 8260, 433, 13, 1115, 18065, 6968, 264, 734, 7086, 364, 15339, 6, 430, 27772, 279, 12974, 1957, 382, 14711, 20755, 6425, 512, 74694, 12958, 198, 2, 19127, 279, 24748, 734, 198, 755, 24748, 4019, 262, 674, 8377, 264, 43213, 1984, 198, 262, 1194, 446, 9906, 11, 4435, 67606, 2, 7290, 279, 24748, 734, 198, 15339, 746, 14196, 19884, 14711, 72387, 315, 4442, 512, 9, 3146, 19897, 264, 734, 7419, 369, 364, 15339, 6, 96618, 1226, 4613, 264, 734, 7086, 364, 15339, 6, 1701, 279, 1595, 755, 63, 16570, 627, 9, 3146, 36919, 291, 264, 734, 2547, 369, 364, 15339, 6, 96618, 28468, 279, 734, 11, 584, 3779, 264, 1194, 5224, 311, 3113, 264, 43213, 1984, 627, 9, 3146, 21634, 279, 364, 15339, 6, 734, 1306, 1202, 7419, 96618, 1226, 7882, 279, 734, 1650, 311, 1306, 279), cumulative_logprob=None, logprobs=None, finish_reason=length, stop_reason=None)], finished=True, metrics=RequestMetrics(arrival_time=1747065434.1455371, last_token_time=1747065467.7144725, first_scheduled_time=1747065434.151819, first_token_time=1747065434.5318873, time_in_queue=0.006281852722167969, finished_time=1747065467.7154217, scheduler_time=0.03329931804910302, model_forward_time=None, model_execute_time=None, spec_token_acceptance_counts=[0]), lora_request=None, num_cached_tokens=0, multi_modal_placeholders={})]
CompletionOutput(index=0, text='\nNameError: name \'hello\' is not defined\n```\nhello()\n```\n### Step-by-step analysis of the problem:\n1. **The error message indicates that the name \'hello\' is not defined**. This means that Python does not recognize \'hello\' as a function, variable, or any other defined entity.\n2. **The code is trying to call a function named \'hello\'**. However, there is no function or variable defined with this name in the given snippet.\n3. **To fix this error, we need to define the \'hello\' function** before calling it. This involves creating a function named \'hello\' that performs the desired action.\n\n### Fixed solution:\n```python\n# Define the hello function\ndef hello():\n    # Print a greeting message\n    print("Hello, World!")\n\n# Call the hello function\nhello()\n```\n\n### Explanation of changes:\n* **Added a function definition for \'hello\'**: We defined a function named \'hello\' using the `def` keyword.\n* **Provided a function body for \'hello\'**: Inside the function, we added a print statement to display a greeting message.\n* **Called the \'hello\' function after its definition**: We moved the function call to after the', token_ids=(198, 678, 1480, 25, 836, 364, 15339, 6, 374, 539, 4613, 198, 14196, 4077, 15339, 746, 14196, 4077, 14711, 15166, 14656, 30308, 6492, 315, 279, 3575, 512, 16, 13, 3146, 791, 1493, 1984, 15151, 430, 279, 836, 364, 15339, 6, 374, 539, 4613, 334, 13, 1115, 3445, 430, 13325, 1587, 539, 15641, 364, 15339, 6, 439, 264, 734, 11, 3977, 11, 477, 904, 1023, 4613, 5502, 627, 17, 13, 3146, 791, 2082, 374, 4560, 311, 1650, 264, 734, 7086, 364, 15339, 6, 334, 13, 4452, 11, 1070, 374, 912, 734, 477, 3977, 4613, 449, 420, 836, 304, 279, 2728, 44165, 627, 18, 13, 3146, 1271, 5155, 420, 1493, 11, 584, 1205, 311, 7124, 279, 364, 15339, 6, 734, 334, 1603, 8260, 433, 13, 1115, 18065, 6968, 264, 734, 7086, 364, 15339, 6, 430, 27772, 279, 12974, 1957, 382, 14711, 20755, 6425, 512, 74694, 12958, 198, 2, 19127, 279, 24748, 734, 198, 755, 24748, 4019, 262, 674, 8377, 264, 43213, 1984, 198, 262, 1194, 446, 9906, 11, 4435, 67606, 2, 7290, 279, 24748, 734, 198, 15339, 746, 14196, 19884, 14711, 72387, 315, 4442, 512, 9, 3146, 19897, 264, 734, 7419, 369, 364, 15339, 6, 96618, 1226, 4613, 264, 734, 7086, 364, 15339, 6, 1701, 279, 1595, 755, 63, 16570, 627, 9, 3146, 36919, 291, 264, 734, 2547, 369, 364, 15339, 6, 96618, 28468, 279, 734, 11, 584, 3779, 264, 1194, 5224, 311, 3113, 264, 43213, 1984, 627, 9, 3146, 21634, 279, 364, 15339, 6, 734, 1306, 1202, 7419, 96618, 1226, 7882, 279, 734, 1650, 311, 1306, 279), cumulative_logprob=None, logprobs=None, finish_reason=length, stop_reason=None)
returning result:  
NameError: name 'hello' is not defined
```
hello()
```
### Step-by-step analysis of the problem:
1. **The error message indicates that the name 'hello' is not defined**. This means that Python does not recognize 'hello' as a function, variable, or any other defined entity.
2. **The code is trying to call a function named 'hello'**. However, there is no function or variable defined with this name in the given snippet.
3. **To fix this error, we need to define the 'hello' function** before calling it. This involves creating a function named 'hello' that performs the desired action.

### Fixed solution:
```python
# Define the hello function
def hello():
    # Print a greeting message
    print("Hello, World!")

# Call the hello function
hello()
```

### Explanation of changes:
* **Added a function definition for 'hello'**: We defined a function named 'hello' using the `def` keyword.
* **Provided a function body for 'hello'**: Inside the function, we added a print statement to display a greeting message.
* **Called the 'hello' function after its definition**: We moved the function call to after the

2025-05-12 10:57:47,720 - werkzeug - INFO - 10.71.8.1 - - [12/May/2025 10:57:47] "POST /infer HTTP/1.1" 200 -
